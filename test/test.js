// Generated by CoffeeScript 1.9.3
var Promise, Start, Stop, Update, Validate, context, getPromise, input, jsonfile, kavconfig, startcall, stopcall, updatecall;

jsonfile = require('jsonfile');

Start = require('./../src/context').start;

Stop = require('./../src/context').stop;

Update = require('./../src/context').update;

Validate = require('./../src/context').validate;

Promise = require('bluebird');

context = {};

input = {
  "baseUrl": "http://192.168.122.217:5000",
  "bInstalledPackages": true,
  "bFactoryPush": false,
  "service": {
    "name": "kaspersky",
    "config": {}
  }
};

getPromise = function() {
  return new Promise(function(resolve, reject) {
    return resolve();
  });
};

startcall = function(input) {
  return getPromise().then((function(_this) {
    return function(resp) {
      jsonfile.writeFileSync("/tmp/kss-start-input.json", input, {
        spaces: 2
      });
      return Start(input);
    };
  })(this))["catch"]((function(_this) {
    return function(err) {
      return console.log("Start err ", err);
    };
  })(this)).then((function(_this) {
    return function(resp) {
      jsonfile.writeFileSync("/tmp/kss-start-output.json", resp, {
        spaces: 2
      });
      return console.log("result from Start:\n ", JSON.stringify(resp));
    };
  })(this)).done;
};

stopcall = function(input) {
  return getPromise().then((function(_this) {
    return function(resp) {
      jsonfile.writeFileSync("/tmp/kss-stop-input.json", input, {
        spaces: 2
      });
      return Stop(input);
    };
  })(this))["catch"]((function(_this) {
    return function(err) {
      return console.log("Stop err ", err);
    };
  })(this)).then((function(_this) {
    return function(resp) {
      jsonfile.writeFileSync("/tmp/kss-stop-output.json", resp, {
        spaces: 2
      });
      return console.log("result from Stop:\n ", JSON.stringify(resp));
    };
  })(this)).done;
};

updatecall = function(input) {
  return getPromise().then((function(_this) {
    return function(resp) {
      input.service.config.HTTP_AV_SCAN = true;
      input.service.config.KASPERSKY_HTTP_UPLOAD = true;
      input.service.config.KASPERSKY_HTTP_DOWNLOAD = true;
      jsonfile.writeFileSync("/tmp/kss-update-input.json", input, {
        spaces: 2
      });
      return Update(input);
    };
  })(this))["catch"]((function(_this) {
    return function(err) {
      return console.log("Update err ", err);
    };
  })(this)).then((function(_this) {
    return function(resp) {
      jsonfile.writeFileSync("/tmp/kss-update-output.json", resp, {
        spaces: 2
      });
      return console.log("result from Update:\n ", JSON.stringify(resp));
    };
  })(this)).done;
};

kavconfig = {
  "KASPERSKY_SCAN_TIMEOUT": 20000,
  "KASPERSKY_MAX_SESSIONS": 10,
  "HTTP_AV_SCAN": false,
  "KASPERSKY_HTTP_UPLOAD": false,
  "KASPERSKY_HTTP_DOWNLOAD": false,
  "MAIL_AV_SCAN": false,
  "KASPERSKY_SMTP": false,
  "KASPERSKY_POP3": false,
  "KASPERSKY_IMAP": false,
  "HTTP_VIRUS_TEMPLATE": {
    "filename": "template.virus",
    "encoding": "base64",
    "data": "dGVtcGxhdGUudmlydXMgY29udGVudA=="
  }
};

input.service.config = kavconfig;

startcall(input);

setTimeout(updatecall, 30000, input);

setTimeout(stopcall, 60000, input);


/*
config = {}
result = Validate(config)
console.log "Validate output ", result
 */
